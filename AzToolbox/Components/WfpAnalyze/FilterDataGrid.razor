@using WfpXmlHelper;

<DataGrid TItem="Filter"
          Data="@Filters"
          DetailRowStartsVisible="false"
          Filterable="true"
          FilterMethod="DataGridFilterMethod.Contains"
          Narrow="true"
          ShowPager="true"
          ShowPageSizes="true"
          @bind-PageSize="@pageSize"
          PageSizes="@(new int[]{50,100,200,300,400,500,1000,5000})"
          Groupable="true"
          ShowGrouping="true"
          Bordered="true"
          Resizable="true"
          ResizeMode="TableResizeMode.Columns"
          Style="font-size:small">
    <DataGridColumns>
        <DataGridColumn Field="@nameof(Filter.Id)" Caption="Filter ID" Sortable="true" />
        <DataGridColumn Field="@nameof(Filter.EffectiveWeight)" Caption="Effective Weight" Sortable="true" />
        <DataGridColumn Field="@nameof(Filter.Name)" Caption="Name" Sortable="false" />
        <DataGridColumn Field="@nameof(Filter.LayerKey)" Caption="LayerKey" Sortable="false" Groupable="true" Grouping="true" />
        <DataGridColumn Field="@nameof(Filter.ProviderKey)" Caption="ProviderKey" Sortable="false" />
        <DataGridColumn Field="@nameof(Filter.Action)" Caption="Action" Sortable="false" Groupable="true" />
    </DataGridColumns>
    <DetailRowTemplate>
        @{
            <Field Horizontal>
                <FieldLabel ColumnSize="ColumnSize.Is2">Description</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is10">
                    <MemoEdit Text="@context.Description" Disabled AutoSize Size="Size.Small"/>
                </FieldBody>
            </Field>
            <Field Horizontal>
                <FieldLabel ColumnSize="ColumnSize.Is2">Weight</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is10">
                    <TextEdit Text="@context.Weight" Disabled Size="Size.Small" />
                </FieldBody>
            </Field>
            <Field Horizontal>
                <FieldLabel ColumnSize="ColumnSize.Is2">Flags</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is10">
                    <MemoEdit Text="@context.Flags.Aggregate(string.Empty, (a,b) => {if(string.IsNullOrEmpty(a)) return b; return $"{a}{Environment.NewLine}{b}";})" Disabled AutoSize Size="Size.Small" />
                </FieldBody>
            </Field>
            @if (context.Callout != null)
            {
                <Field Horizontal>
                     <FieldLabel ColumnSize="ColumnSize.Is2">Callout</FieldLabel>
                     <FieldBody ColumnSize="ColumnSize.Is10">
                     <MemoEdit Text="@("ID: " + context.Callout.Id + " Key: " + context.Callout.CalloutKey + Environment.NewLine + context.Callout.Name + Environment.NewLine + context.Callout.Description + Environment.NewLine + context.Callout.ApplicableLayer)" Disabled AutoSize Size="Size.Small" />
                     </FieldBody>
                </Field>
            }
            <Field Horizontal>
                <FieldLabel ColumnSize="ColumnSize.Is2">Condition</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is10">
                    <Table Bordered Narrow Responsive>
                        <TableHeader>
                            <TableRow>
                                <TableHeaderCell>Field</TableHeaderCell>
                                <TableHeaderCell>Match</TableHeaderCell>
                                <TableHeaderCell>Value</TableHeaderCell>
                            </TableRow>
                        </TableHeader>
                        <TableBody>
                        @foreach(var cond in context.Condition)
                        {
                            <TableRow>
                                <TableRowCell>@cond.Item1</TableRowCell>
                                <TableRowCell>@cond.Item2</TableRowCell>
                                <TableRowCell>@cond.Item3</TableRowCell>
                            </TableRow>
                        }
                        </TableBody>
                    </Table>
                </FieldBody>
            </Field>
        }
    </DetailRowTemplate>
    <TotalItemsTemplate><Badge Color="Color.Primary">@context.TotalItems total items</Badge></TotalItemsTemplate>
    <TotalItemsShortTemplate><Badge Color="Color.Primary">@context.TotalItems</Badge></TotalItemsShortTemplate>
</DataGrid>

@code {
    [Parameter]
    public IEnumerable<Filter> Filters { get; set; } = Array.Empty<Filter>();

    int pageSize = 200;
}
