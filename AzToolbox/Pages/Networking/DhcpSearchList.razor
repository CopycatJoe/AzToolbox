@page "/Networking/DhcpSearchList"
<PageTitle>DHCP Option 119 Tool - AzToolbox</PageTitle>

@inject INotificationService NotificationService

<Card Width="Width.Is75" Margin="Margin.IsAuto">
    <CardBody>
        <Field>
            <FieldLabel>Suffix</FieldLabel>
            <Addons>
                <Addon AddonType="AddonType.Body">
                    <TextEdit @bind-Text="newSuffix" Placeholder="New Suffix" />
                </Addon>
                <Addon AddonType="AddonType.End">
                    <Button Style="background:var(--colorBrandBackground); color:var(--colorNeutralForegroundOnBrand)" Width="Width.Px(75)" Clicked="AddSuffix" Size="Size.Small">Add</Button>
                </Addon>
            </Addons>
        </Field>
        <ListView TItem="string"
                  Data="suffixes"
                  TextField="item=>item"
                  ValueField="item=>item"
                  Mode="ListGroupMode.Static"
                  MaxHeight="50vh"
                  Flush="true"
                  Style="overflow:auto">
            <ItemTemplate>
                <Div Flex="Flex.InlineFlex.JustifyContent.Between.AlignItems.Center" Width="Width.Is100">
                    <Heading Size="HeadingSize.Is6" Margin="Margin.Is0">@context.Text</Heading>
                    <Button Color="Color.Danger" Padding="Padding.Is5.OnX" Clicked="@(() => RemoveSuffix(context.Value))" Size="Size.Small">Remove</Button>
                </Div>
            </ItemTemplate>
        </ListView>
        <Field Margin="Margin.Is1.OnY">
            <FieldLabel>Scope ID</FieldLabel>
            <TextEdit @bind-Text="scopeId" />
        </Field>
        <Field Margin="Margin.Is1.OnY" Flex="Flex.AlignItems.Center">
            <FieldLabel>Compress Option</FieldLabel>
            <Switch @bind-Checked="compress">@(compress ? "Enabled" : "Disabled")</Switch>
        </Field>
        <Divider DividerType="DividerType.Solid" />
        <Div Flex="Flex.Row.JustifyContent.Around" Margin="Margin.IsAuto.OnX.Is1.OnY">
            <Button Color="Color.Primary" Clicked="EncOption" Width="Width.Px(350)">Encode Option 119</Button>
            <Button Color="Color.Secondary" Clicked="DecOption" Width="Width.Px(350)">Decode Option 119</Button>
        </Div>
        <Divider DividerType="DividerType.Solid" />
        <Field Margin="Margin.Is1.OnY">
            <FieldLabel>Netsh Command</FieldLabel>
            <MemoEdit Class="monospace-fixed-textbox" Margin="Margin.Is1.OnY" Text="@netshCommand" ReadOnly AutoSize />
        </Field>
        <Field Margin="Margin.Is1.OnY">
            <FieldLabel>PowerShell Command</FieldLabel>
            <MemoEdit Class="monospace-fixed-textbox" Margin="Margin.Is1.OnY" Text="@powershellCommand" ReadOnly AutoSize />
        </Field>
        <Field Margin="Margin.Is1.OnY">
            <FieldLabel>Raw Option Value</FieldLabel>
            <MemoEdit Class="monospace-fixed-textbox" Margin="Margin.Is1.OnY" spellcheck="false" @bind-Text="@rawOptionValue" AutoSize />
        </Field>
    </CardBody>
</Card>


@code {
    string newSuffix = string.Empty;
    List<string> suffixes = new();

    string netshCommand = string.Empty;
    string powershellCommand = string.Empty;
    string rawOptionValue = string.Empty;
    bool compress = true;
    string? scopeId;

    void AddSuffix()
    {
        if (!string.IsNullOrEmpty(newSuffix))
        {
            suffixes.Add(newSuffix);
            newSuffix = string.Empty;
        }
    }

    void RemoveSuffix(string item)
    {
        suffixes.Remove(item);
    }

    void EncOption()
    {
        var option119bytes = AzToolbox.Utilities.DhcpSearchListUtil.EncodeSearchList(suffixes, compress);
        netshCommand = AzToolbox.Utilities.DhcpSearchListUtil.GetNetshCommand(option119bytes, scopeId);
        powershellCommand = AzToolbox.Utilities.DhcpSearchListUtil.GetPowerShellCommand(option119bytes, scopeId);
        rawOptionValue = string.Join(' ', option119bytes.Select(x => x.ToString("X2")));
    }

    void DecOption()
    {
        suffixes.Clear();
        try
        {
            var escaped = System.Text.RegularExpressions.Regex.Replace(rawOptionValue, @"[\\\r\n\s,-]|0x", string.Empty);
            var option119bytes = Convert.FromHexString(escaped);
            suffixes.AddRange(AzToolbox.Utilities.DhcpSearchListUtil.DecodeSearchList(option119bytes));
        }
        catch (Exception ex)
        {
            NotificationService.Error(ex.Message);
        }
    }
}
