@page "/Networking/DhcpSearchList"
<PageTitle>DHCP Option 119 Tool - AzToolbox</PageTitle>

@inject INotificationService NotificationService

<Card Width="Width.Is75" Margin="Margin.IsAuto">
    <CardBody>
        <Addons>
            <Addon AddonType="AddonType.Start">
                <AddonLabel Style="min-width: 300px">Suffix</AddonLabel>
            </Addon>
            <Addon AddonType="AddonType.Body">
                <TextEdit @bind-Text="newSuffix" Placeholder="New Suffix" />
            </Addon>
            <Addon AddonType="AddonType.End">
                <Button Color="Color.Primary" Clicked="AddSuffix" Size="Size.Small" Padding="Padding.Is5.OnX">Add</Button>
            </Addon>
        </Addons>
        <ListView TItem="string"
                  Data="suffixes"
                  TextField="item=>item"
                  ValueField="item=>item"
                  Mode="ListGroupMode.Static"
                  MaxHeight="50vh"
                  Flush="true"
                  Style="overflow:auto">
            <ItemTemplate>
                <Div Flex="Flex.InlineFlex.JustifyContent.Between.AlignItems.Center" Width="Width.Is100">
                    <Heading Size="HeadingSize.Is6" Margin="Margin.Is0">@context.Text</Heading>
                        <Button Color="Color.Danger" Padding="Padding.Is5.OnX" Clicked="@(() => RemoveSuffix(context.Value))" Size="Size.Small">Remove</Button>
                    </Div>
                </ItemTemplate>
            </ListView>
            <Addons Margin="Margin.Is2.FromTop">
                <Addon AddonType="AddonType.Start">
                    <AddonLabel Style="min-width: 300px">Scope ID</AddonLabel>
                </Addon>
                <Addon AddonType="AddonType.Body">
                    <TextEdit @bind-Text="scopeId" />
                </Addon>
            </Addons>
            <Addons Flex="Flex.InlineFlex.AlignItems.Center" Margin="Margin.Is2.FromTop">
                <Addon AddonType="AddonType.Start" Margin="Margin.Is1.FromEnd">
                    <AddonLabel Style="min-width: 300px">Compress Option</AddonLabel>
                </Addon>
                <Addon AddonType="AddonType.Body">
                    <Switch @bind-Checked="compress">Enable</Switch>
                </Addon>
            </Addons>
            <Divider DividerType="DividerType.Solid" />
            <Button Color="Color.Primary" Clicked="EncOption" Block>Encode Option 119</Button>
        <Button Color="Color.Secondary" Clicked="DecOption" Block>Decode Option 119</Button>
        <Divider DividerType="DividerType.Solid" />
        <MemoEdit Class="monospace-fixed-textbox" Margin="Margin.Is2.FromTop" Text="@netshCommand" Placeholder="Netsh Command" ReadOnly AutoSize />
         <MemoEdit Class="monospace-fixed-textbox" Margin="Margin.Is2.FromTop" Text="@powershellCommand" Placeholder="PowerShell Command" ReadOnly AutoSize />
         <MemoEdit Class="monospace-fixed-textbox" Margin="Margin.Is2.FromTop" spellcheck="false" @bind-Text="@rawOptionValue" Placeholder="Raw Option Value" AutoSize />
     </CardBody>
 </Card>


 @code {
    string newSuffix = string.Empty;
    List<string> suffixes = new();

    string netshCommand = string.Empty;
    string powershellCommand = string.Empty;
    string rawOptionValue = string.Empty;
    bool compress = true;
    string? scopeId;

    void AddSuffix()
    {
        if (!string.IsNullOrEmpty(newSuffix))
        {
            suffixes.Add(newSuffix);
            newSuffix = string.Empty;
        }
    }

    void RemoveSuffix(string item)
    {
        suffixes.Remove(item);
    }

    void EncOption()
    {
        var option119bytes = AzToolbox.Utilities.DhcpSearchListUtil.EncodeSearchList(suffixes, compress);
        netshCommand = AzToolbox.Utilities.DhcpSearchListUtil.GetNetshCommand(option119bytes, scopeId);
        powershellCommand = AzToolbox.Utilities.DhcpSearchListUtil.GetPowerShellCommand(option119bytes, scopeId);
        rawOptionValue = string.Join(' ', option119bytes.Select(x => x.ToString("X2")));
    }

    void DecOption()
    {
        suffixes.Clear();
        try
        {
            var escaped = System.Text.RegularExpressions.Regex.Replace(rawOptionValue, @"[\\\r\n\s,-]|0x", string.Empty);
            var option119bytes = Convert.FromHexString(escaped);
            suffixes.AddRange(AzToolbox.Utilities.DhcpSearchListUtil.DecodeSearchList(option119bytes));
        }
        catch (Exception ex)
        {
            NotificationService.Error(ex.Message);
        }
    }
}
