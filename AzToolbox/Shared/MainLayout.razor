@inherits LayoutComponentBase
<CascadingValue Value="this">
    <Layout>
        @if (ShowHeader)
        {
            <LayoutHeader>
                <Bar Breakpoint="Breakpoint.Desktop"
                     Background="Background.Dark"
                     ThemeContrast="ThemeContrast.Dark">
                    <BarBrand>
                        <Div Style="display:flex;align-items:baseline">
                            <Figure Size="FigureSize.Is48x48" Margin="Margin.Is0">
                                <FigureImage Source="icon-192.png" />
                            </Figure>
                            <Heading Size="HeadingSize.Is5" Style="user-select: none">AzToolbox</Heading>
                        </Div>
                    </BarBrand>
                    <BarToggler />
                    <BarMenu>
                        <BarStart>
                            <BarItem>
                                <BarLink To="/">Home</BarLink>
                            </BarItem>
                            <BarItem>
                                <BarDropdown>
                                    <BarDropdownToggle>Common</BarDropdownToggle>
                                    <BarDropdownMenu>
                                        <BarDropdownItem To="/Common/Base64Utils">Base64 Utils</BarDropdownItem>
                                        <BarDropdownItem To="/Common/RngUtils">Random Generator</BarDropdownItem>
                                    </BarDropdownMenu>
                                </BarDropdown>
                            </BarItem>
                            <BarItem>
                                <BarDropdown>
                                    <BarDropdownToggle>Windows</BarDropdownToggle>
                                    <BarDropdownMenu>
                                        <BarDropdownItem To="/Windows/VpnBuild">VPN ProfileXML Builder</BarDropdownItem>
                                        <BarDropdownItem To="/Windows/WfpAnalyze">WFP Trace Analyze</BarDropdownItem>
                                        <BarDropdownItem To="/Windows/SecDescriptor">Security Descriptor Tool</BarDropdownItem>
                                    </BarDropdownMenu>
                                </BarDropdown>
                            </BarItem>
                            <BarItem>
                                <BarDropdown>
                                    <BarDropdownToggle>Networking</BarDropdownToggle>
                                    <BarDropdownMenu>
                                        <BarDropdownItem To="/Networking/PacParse">PAC Parse</BarDropdownItem>
                                        <BarDropdownItem To="/Networking/DhcpSearchList">DHCP Option 119 Tool</BarDropdownItem>
                                        <BarDropdownItem To="/Networking/BDPCalc">BDP Calculator</BarDropdownItem>
                                    </BarDropdownMenu>
                                </BarDropdown>
                            </BarItem>
                        </BarStart>
                    </BarMenu>
                </Bar>
            </LayoutHeader>
        }
        <LayoutContent Margin="Margin.Is3">
            @Body
        </LayoutContent>
        @if (ShowFooter)
        {
            <LayoutFooter>
                <Paragraph TextAlignment="TextAlignment.End" Margin="Margin.Is1" Style="font-size:small; user-select: none">
                    &copy; 2023 AzToolbox <br />
                    Powered by Blazor, @System.Runtime.InteropServices.RuntimeInformation.FrameworkDescription @System.Runtime.InteropServices.RuntimeInformation.RuntimeIdentifier and Blazorise
                </Paragraph>
            </LayoutFooter>
        }
    </Layout>
</CascadingValue>

@code {
    public bool showHeader = true;
    public bool ShowHeader
    {
        get => showHeader;
        set
        {
            showHeader = value;
            StateHasChanged();
        }
    }
    public bool showFooter = true;
    public bool ShowFooter
    {
        get => showFooter;
        set
        {
            showFooter = value;
            StateHasChanged();
        }
    }
}